$RegPath = 'HKLM:\SOFTWARE\Policies\Microsoft\Windows NT\Printers'
$RegProperty = 'RegisterSpoolerRemoteRpcEndPoint'
$RegValue = 2
$ServiceName = 'Print Spooler'

if (-not(Test-Path -Path $RegPath)) { 
    "Registry key '$RegPath' does not exist, creating"
    try {
        New-Item $RegPath -ErrorAction Stop
        "Registry key '$RegPath' created"
        
        $rpckey = (Get-ItemProperty -Path $RegPath | Select-Object -ExpandProperty $RegProperty -ErrorAction Ignore) 
        if ($null -ne $rpckey) { 
            "Registry key Property '$RegProperty' found, setting correct value '$RegValue'"
            try {
                "Setting Registry key Property '$RegProperty' to value $RegValue'"
                Set-ItemProperty -Path $RegPath -Name $RegProperty -Value $RegValue -Force -ErrorAction Stop
                "Property value set"
            } catch {
                Write-Warning "Unable to set Registry key Property value.`n$_"
                exit 1
            }            
        } else { 
            try {
                "Creating Registry key Property '$RegProperty' with value $RegValue'"
                New-ItemProperty -Path $RegPath -Name $RegProperty -Value $RegValue -PropertyType 'DWORD' -Force
                "Registry key Property '$RegProperty' with value $RegValue' created"
            } catch {
                Write-Warning "Unable to create Registry key Property.`n$_"
                exit 1
            }
        }
        try {
            "Restarting '$ServiceName' service"
            Restart-Service -DisplayName $ServiceName -Force -ErrorAction Stop
            "'$ServiceName' service restarted, done!"
            exit 0
        } catch {
            Write-Warning "Unable to restart '$ServiceName' Service.`n$_"
            exit 1
        }
    } catch {
        Write-Warning "Unable to create Registry key '$RegPath'.`n$_"
        exit 1
    }
}


